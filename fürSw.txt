Letzter Stand To do: transaction sollte eigentlich angelegt werden -> List funktioniert noch nicht 




https://stackoverflow.com/questions/18791645/how-to-use-session-attributes-in-spring-mvc#18795626

html:
<p th:text="${session.wieesheißt}">
${session.wieesheißt.name == 'hans'}

geht auch th:if


-> warum Post weggelöscht?
-> was ist unterschied zwischen post und get funktionen


to.do
-> kein negativen kredit
-> eingabe erzwingen (bei credit)
-> checken dass man nur von eigenem konto aus überweisen kann
-> checken dass nur verifizierte überweisen können
-> checken ob zb liste empty (bankaccounts oder so) -> bei allem immer
-> fall abfangen, dass kunde ohne account überweisen will
-> abspeichern wie viel der Kredit gekostet hat -> mit interest rate
-> evtl schauen ob bei account get accounts noch unmodifiable werden muss
-> orphan removal bei credit und account
-> config klasse bei allem usen
-> Kommentare schreiben
-> wegen long nochmal schauen -> muss man kasten oder anders deklasieren 0L
-> bei transactional account anlegen schauen ob des alles so funktioniert
-> nochmal auf die ganzen optional achten -> zum beispiel in accountService bei get account || customer service get cutomer
-> evtl Optional nochmal umschreiben
-> löschen von account evtl hinzufügen -> (dabei nur bis zum letzten -> warnung) + (sonst auf anderes konto automatisch)
-> evtl. geld von einem konto auf ein anderes
-> account löschen -> geht erst wenn 0 auf dem letzten konto sind
-> es dürfen nur 99 kontos erstellt werden
-> standard "header" (navigationsleiste) machen und "wiederverwenden"
-> Service Klassen müssen @Transactional sein
-> "" nicht als gültigen user zulassen
-> override hash und equals in entitys
-> löschen für customer wegen owner
-> in addresse number auf long ändern
-> config seite bei richtigeem einloggen ändern -> action kein html
-> allen beans muss ein scope zugeteilt sein (dependency inj)
-> evtl iban besser generieren (endlosschleife abfangen)
-> security reworken -> Right und Customer Right rauslöschen
-> Exceptions aufpassen

eher weniger:
-> evtl dont use for transactions -> für dependency injection
-> in übersicht Account -> use for Transaction setzen -> Feld beim erstellen von neuem Konto wo man setzten kann
-----------> standardmäßig andere bankkontos durchsuchen wenn nicht genug für credit für dci 



falls dennis abspringt:
mockito

Merken:
man kann nur einen Kredit pro Konto haben


Änderungen:
Adresse kunde -> 1 zu 1
Adresse ohne id (embaddable)
user bekommt username
kein timestamp
account rückzahlungsrate
evtl kredit entity
added repayment rate
auch in dtos tid -> ID
key bei customer
